)
fviz_dend(res.hc, k = 4, # Cut in four groups
cex = 0.5, # label size
k_colors = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07"),
color_labels_by_k = TRUE, # color labels by groups
rect = TRUE # Add rectangle around groups
)
fviz_silhouette(res.hc)
df <- scale(USArrests)
library(factoextra)
res.hk <-hkmeans(df, 4)
names(res.hk)
res.hk
fviz_dend(res.hk, cex = 0.6, palette = "jco",
rect = TRUE, rect_border = "jco", rect_fill = TRUE)
fviz_cluster(res.hk, palette = "jco", repel = TRUE,
ggtheme = theme_classic())
install.packages("FactoMineR")
library(FactoMineR)
library(factoextra)
install.packages("leaps")
library(FactoMineR)
install.packages("flashClust")
library(FactoMineR)
HCPC(res, nb.clust = 0, min = 3, max = NULL, graph = TRUE)
res.pca <- PCA(USArrests, ncp = 3, graph = FALSE)
res.pca
res.hcpc <- HCPC(res.pca, graph = FALSE)
fviz_dend(res.hcpc,
cex = 0.7,                     # Label size
palette = "jco",               # Color palette see ?ggpubr::ggpar
rect = TRUE, rect_fill = TRUE, # Add rectangle around groups
rect_border = "jco",           # Rectangle color
labels_track_height = 0.8      # Augment the room for labels
)
fviz_cluster(res.hcpc,
repel = TRUE,            # Avoid label overlapping
show.clust.cent = TRUE, # Show cluster centers
palette = "jco",         # Color palette see ?ggpubr::ggpar
ggtheme = theme_minimal(),
main = "Factor map"
)
plot(
plot(res.hcpc, choice = "3D.map")
plot(res.hcpc, choice = "3D.map")
plot(res.hcpc, choice = "3D.map")
library(cluster)
df <- scale(USArrests)     # Standardize the data
res.fanny <- fanny(df, 2)  # Compute fuzzy clustering with k = 2
head(res.fanny$membership, 3) # Membership coefficients
res.fanny$coeff # Dunn's partition coefficient
head(res.fanny$clustering) # Observation groups
library(factoextra)
fviz_cluster(res.fanny, ellipse.type = "norm", repel = TRUE,
palette = "jco", ggtheme = theme_minimal(),
legend = "right")
fviz_silhouette(res.fanny, palette = "jco",
ggtheme = theme_minimal())
library("MASS")
data("geyser")
library("ggpubr")
ggscatter(geyser, x = "duration", y = "waiting")+
geom_density2d() # Add 2D density
library("mclust")
data("diabetes")
install.packages("mclust")
library("mclust")
data("diabetes")
head(diabetes, 3)
library(mclust)
df <- scale(diabetes[, -1]) # Standardize the data
mc <- Mclust(df)            # Model-based-clustering
summary(mc)                 # Print a summary
mc$modelName                # Optimal selected model ==> "VVV"
mc$G                        # Optimal number of cluster => 3
head(mc$z, 30)              # Probality to belong to a given cluster
head(mc$classification, 30) # Cluster assignement of each observation
library(factoextra)
fviz_mclust(mc, "BIC", palette = "jco")
fviz_mclust(mc, "classification", geom = "point",
pointsize = 1.5, palette = "jco")
install.packages("tidyr")
fviz_mclust(mc, "BIC", palette = "jco")
fviz_mclust(mc, "classification", geom = "point",
pointsize = 1.5, palette = "jco")
fviz_mclust(mc, "uncertainty", palette = "jco")
library(factoextra)
data("multishapes")
df <- multishapes[, 1:2]
set.seed(123)
km.res <- kmeans(df, 5, nstart = 25)
fviz_cluster(km.res, df,  geom = "point",
ellipse= FALSE, show.clust.cent = FALSE,
palette = "jco", ggtheme = theme_classic())
install.packages("fpc")
install.packages("dbscan")
install.packages("factoextra")
install.packages("factoextra")
data("multishapes", package = "factoextra")
df <- multishapes[, 1:2]
library("fpc")
set.seed(123)
install.packages("diptest")
library("fpc")
set.seed(123)
install.packages("robustbase")
library("fpc")
set.seed(123)
install.packages("kernlab")
library("fpc")
set.seed(123)
db <- fpc::dbscan(df, eps = 0.15, MinPts = 5)
library("factoextra")
fviz_cluster(db, data = df, stand = FALSE,
ellipse = FALSE, show.clust.cent = FALSE,
geom = "point",palette = "jco", ggtheme = theme_classic())
print.dbscan()
print(db)
db$cluster[sample(1:1089, 20)]
dbscan::kNNdistplot(df, k =  5)
abline(h = 0.15, lty = 2)
library(neuralnet)
library(DALEX)
library(nnet)
library(randomForest)
library(ggplot2)
library(pdp)
library(breakDown)
library(neuralnet)
library(DALEX)
library(nnet)
library(randomForest)
install.packages("randomForest")
library(ggplot2)
library(pdp)
install.packages("pdp")
library(breakDown)
df = read.csv(file="D:\\Edukacja\\1.Doktorat\\ROK_2\\Symulacje\\results.csv", header=TRUE, sep=",")
df$n <- NULL
df <- df[!is.na(df$average_price),]
dim(df)[1]
tres <- dim(df)[1]*0.8
tres
train <- df[1:tres,]
test <- df[(tres+1):dim(df)[1],]
model1 <- lm("average_price ~ rewire + lsoc + lind + nei" , train)
summary(model1)
pred1 <- predict(model1, test)
df = read.csv(file="D:\\Edukacja\\1.Doktorat\\ROK_2\\Symulacje\\results.csv", header=TRUE, sep=",")
df$n <- NULL
df <- df[!is.na(df$average_price),]
dim(df)[1]
tres <- dim(df)[1]*0.8
tres
train <- df[1:tres,]
test <- df[(tres+1):dim(df)[1],]
model1 <- lm("average_price ~ rewire + lsoc + lind + nei" , train)
summary(model1)
pred1 <- predict(model1, test)
actual <- test$average_price
plot(actual, type='b')
lines(pred1, col="blue")
lines(pred1, col="blue")
model3 <- randomForest(average_price ~ rewire + lsoc + lind + nei ,data =  train, importance = T)
library(neuralnet)
library(DALEX)
library(nnet)
library(randomForest)
library(ggplot2)
library(pdp)
library(breakDown)
model3 <- randomForest(average_price ~ rewire + lsoc + lind + nei ,data =  train, importance = T)
pred3 <- predict(model3, test)
plot(actual, type='b')
lines(pred3, col="darkred")
lm_explainer <- explain(model1, train, train$average_price)
rf_explainer <- explain(model3, train, train$average_price)
lm_mp <- model_performance(lm_explainer)
rf_mp <- model_performance(rf_explainer)
plot(lm_mp, rf_mp)
plot(lm_mp, rf_mp, geom = "boxplot")
plot(lm_mp, rf_mp)
plot(lm_mp, rf_mp, geom = "boxplot")
vi_rf <- variable_importance(rf_explainer, loss_function = loss_root_mean_square)
vi_rf
vi_lm <- variable_importance(lm_explainer, loss_function = loss_root_mean_square)
vi_lm
plot(vi_lm, vi_rf)
plot(vi_lm)
plot(vi_rf)
vi_lm <- variable_importance(lm_explainer, loss_function = loss_root_mean_square, type = "difference")
vi_rf <- variable_importance(rf_explainer, loss_function = loss_root_mean_square, type = "difference")
plot(vi_lm, vi_rf)
sv_rf  <- single_variable(rf_explainer, variable =  "nei", type = "pdp")
sv_lm  <- single_variable(lm_explainer, variable =  "nei", type = "pdp")
plot(sv_rf, sv_lm)
plot(sv_rf, sv_lm)
rf_mp
ggplot(rf_mp, aes(observed, diff)) + geom_point() +
xlab("Observed") + ylab("Predicted - Observed") +
ggtitle("Diagnostic plot for the random forest model") + theme_mi2()
model3 <- randomForest(average_price ~ rewire + lsoc + lind + nei ,data =  train, importance = T)
pred3 <- predict(model3, test)
plot(actual, type='b')
lines(pred3, col="darkred")
plot(actual, type='b')
lines(pred1, col="blue")
model3 <- randomForest(average_price ~ rewire + lsoc + lind + nei ,data =  train, importance = T)
pred3 <- predict(model3, test)
plot(actual, type='b')
lines(pred3, col="darkred")
lm_explainer <- explain(model1, train, train$average_price)
rf_explainer <- explain(model3, train, train$average_price)
lm_mp <- model_performance(lm_explainer)
rf_mp <- model_performance(rf_explainer)
plot(lm_mp, rf_mp)
plot(lm_mp, rf_mp, geom = "boxplot")
vi_rf <- variable_importance(rf_explainer, loss_function = loss_root_mean_square)
vi_rf
vi_lm <- variable_importance(lm_explainer, loss_function = loss_root_mean_square)
vi_lm
plot(vi_lm, vi_rf)
plot(vi_lm)
plot(vi_rf)
vi_lm <- variable_importance(lm_explainer, loss_function = loss_root_mean_square, type = "difference")
vi_rf <- variable_importance(rf_explainer, loss_function = loss_root_mean_square, type = "difference")
plot(vi_lm, vi_rf)
sv_rf  <- single_variable(rf_explainer, variable =  "nei", type = "pdp")
sv_lm  <- single_variable(lm_explainer, variable =  "nei", type = "pdp")
plot(sv_rf, sv_lm)
rf_mp
ggplot(rf_mp, aes(observed, diff)) + geom_point() +
xlab("Observed") + ylab("Predicted - Observed") +
ggtitle("Diagnostic plot for the random forest model") + theme_mi2()
testy <- test[13,]
sing_rf <- single_prediction(rf_explainer , observation = testy)
breakDown:::print.broken(sing_rf)
sing_lm <- single_prediction(lm_explainer, observation = testy)
plot(sing_lm, sing_rf)
sv_rf  <- single_variable(rf_explainer, variable =  "lind", type = "pdp")
sv_lm  <- single_variable(lm_explainer, variable =  "lind", type = "pdp")
plot(sv_rf, sv_lm)
sv_rf  <- single_variable(rf_explainer, variable =  "lsoc", type = "pdp")
sv_lm  <- single_variable(lm_explainer, variable =  "lsoc", type = "pdp")
plot(sv_rf, sv_lm)
sv_rf  <- single_variable(rf_explainer, variable =  "lind", type = "pdp")
sv_lm  <- single_variable(lm_explainer, variable =  "lind", type = "pdp")
plot(sv_rf, sv_lm)
summary(model1)
testy <- test[13,]
testy
USArrests
plot(USArrests$UrbanPop, USArrests$Assault)
df = USArrests
ifelse(df$Murder > 10)
ifelse(df$Murder > 10,1,0)
df["murder10"]  = ifelse(df$Murder > 10,1,0)
plot(USArrests$UrbanPop, USArrests$Assault,col = df$murder10)
library( dplyr)
library( stargazer)
install.packages("stargazer")
library( stargazer)
plot( df %>% filter( Murder > 10),
pch = 20, col = rgb( 0, 0, 1, 0.5))
plot( df %>% filter( Murder > 10) %>% select(UrbanPop,Assault),
pch = 20, col = rgb( 0, 0, 1, 0.5))
plot( df %>% filter( Murder > 10) %>% select(UrbanPop,Assault),
pch = 20, col = rgb( 0, 0, 1, 0.5), xlim = range( df$UrbanPop), ylim = range( df$Assault))
plot( df %>% filter( Murder >= 10) %>% select(UrbanPop,Assault),
pch = 20, col = rgb( 0, 0, 1, 0.5), xlim = range( df$UrbanPop), ylim = range( df$Assault))
points( df %>% filter( Murder < 10) %>% select(UrbanPop,Assault),
pch = 20, col = rgb( 0, 1, 0, 0.5), xlim = range( df$UrbanPop), ylim = range( df$Assault))
plot( df %>% filter( Murder >= 10) %>% select(UrbanPop,Assault),
pch = 20, col = rgb( 0, 0, 1, 0.5), xlim = range( df$UrbanPop), ylim = range( df$Assault))
points( df %>% filter( Murder < 10) %>% select(UrbanPop,Assault),
pch = 19, col = rgb( 1, 0, 0, 0.5), xlim = range( df$UrbanPop), ylim = range( df$Assault))
plot( df %>% filter( Murder >= 10) %>% select(UrbanPop,Assault),
pch = 19, col = rgb( 0, 0, 1, 0.5), xlim = range( df$UrbanPop), ylim = range( df$Assault))
points( df %>% filter( Murder < 10) %>% select(UrbanPop,Assault),
pch = 19, col = rgb( 1, 0, 0, 0.5), xlim = range( df$UrbanPop), ylim = range( df$Assault))
png( filename = "./analiza/analiza_1_fig_1.png")
plot( df %>% filter( Murder >= 10) %>% select(UrbanPop,Assault),
pch = 19, col = rgb( 0, 0, 1, 0.5), xlim = range( df$UrbanPop), ylim = range( df$Assault))
points( df %>% filter( Murder < 10) %>% select(UrbanPop,Assault),
pch = 19, col = rgb( 1, 0, 0, 0.5), xlim = range( df$UrbanPop), ylim = range( df$Assault))
grid()
png( filename = "./analiza/analiza_mg_fig_1.png")
plot( df %>% filter( Murder >= 10) %>% select(UrbanPop,Assault),
pch = 19, col = rgb( 0, 0, 1, 0.5), xlim = range( df$UrbanPop), ylim = range( df$Assault))
points( df %>% filter( Murder < 10) %>% select(UrbanPop,Assault),
pch = 19, col = rgb( 1, 0, 0, 0.5), xlim = range( df$UrbanPop), ylim = range( df$Assault))
grid()
dev.off()
png( filename = "./analiza/analiza_mg_fig_1.png")
setwd("D:/Edukacja/1.Doktorat/ROK_3/organizacja_projektow_naukowych/ramsza/ver1/proj_mg/analiza")
png( filename = "./analiza/analiza_mg_fig_1.png")
png( filename = ".\\analiza_mg_fig_1.png")
plot( df %>% filter( Murder >= 10) %>% select(UrbanPop,Assault),
pch = 19, col = rgb( 0, 0, 1, 0.5), xlim = range( df$UrbanPop), ylim = range( df$Assault))
points( df %>% filter( Murder < 10) %>% select(UrbanPop,Assault),
pch = 19, col = rgb( 1, 0, 0, 0.5), xlim = range( df$UrbanPop), ylim = range( df$Assault))
grid()
dev.off()
png( filename = "./analiza_mg_fig_1.png")
plot( df %>% filter( Murder >= 10) %>% select(UrbanPop,Assault),
pch = 19, col = rgb( 0, 0, 1, 0.5), xlim = range( df$UrbanPop), ylim = range( df$Assault))
points( df %>% filter( Murder < 10) %>% select(UrbanPop,Assault),
pch = 19, col = rgb( 1, 0, 0, 0.5), xlim = range( df$UrbanPop), ylim = range( df$Assault))
grid()
dev.off()
View(df)
dTable %>% select(Murder,Assault,UrbanPop)
dTable <- df %>% select(Murder,Assault,UrbanPop)
dTable
setwd("D:/Edukacja/1.Doktorat/ROK_3/organizacja_projektow_naukowych/ramsza/ver1/proj_mg")
png( filename = "./analiza/analiza_mg_fig_1.png")
plot( df %>% filter( Murder >= 10) %>% select(UrbanPop,Assault),
pch = 19, col = rgb( 0, 0, 1, 0.5), xlim = range( df$UrbanPop), ylim = range( df$Assault))
points( df %>% filter( Murder < 10) %>% select(UrbanPop,Assault),
pch = 19, col = rgb( 1, 0, 0, 0.5), xlim = range( df$UrbanPop), ylim = range( df$Assault))
grid()
dev.off()
stargazer( dTable,
out = "./analiza/analiza_mg_tab_1.tex",
summary = FALSE,
rownames = FALSE,
title = "Przestępczość w USA na każdy stan",
align = TRUE,
font.size = "small",
no.space = TRUE,
label = "tab:analiza_mg_tab_1")
dMeanAssault <- mean( df$Assault)
dMeanMurder <- mean( df$Murder)
dMeanAssault <- mean( df$Assault)
dMeanMurder <- mean( df$Murder)
`%+%` <- paste0
conn <- file( "./analiza/analiza_mg_mean_assault.tex", open = "wt")
writeLines( "\\(" %+% as.character( round( dMeanAssault, 2)) %+% "\\)", conn)
close( conn)
conn <- file( "./analiza/analiza_mg_mean_murder.tex", open = "wt")
writeLines( "\\(" %+% as.character( round( dMeanMurder, 2)) %+% "\\)", conn)
close( conn)
write.csv(df, file= "./dane/usarrest.csv", row.names = FALSE)
df = read.csv(file= "./dane/usarrest.csv")
dTable
`%+%` <- paste0
library( dplyr)
library( stargazer)
setwd("D:/Edukacja/1.Doktorat/ROK_3/organizacja_projektow_naukowych/ramsza/ver1/proj_mg")
df = read.csv(file= "./dane/usarrest.csv")
# PLOT
png( filename = "./analiza/analiza_mg_fig_1.png")
plot( df %>% filter( Murder >= 10) %>% select(UrbanPop,Assault),
pch = 19, col = rgb( 0, 0, 1, 0.5), xlim = range( df$UrbanPop), ylim = range( df$Assault))
points( df %>% filter( Murder < 10) %>% select(UrbanPop,Assault),
pch = 19, col = rgb( 1, 0, 0, 0.5), xlim = range( df$UrbanPop), ylim = range( df$Assault))
grid()
dev.off()
# Tablica
dTable <- df %>% select(Murder,Assault,UrbanPop)
dTable
stargazer( dTable,
out = "./analiza/analiza_mg_tab_1.tex",
summary = FALSE,
rownames = TRUE,
title = "Tablica_1",
align = TRUE,
font.size = "small",
no.space = TRUE,
label = "tab:analiza_mg_tab_1")
# Pojedyncze liczby
dMeanAssault <- mean( df$Assault)
dMeanMurder <- mean( df$Murder)
`%+%` <- paste0
conn <- file( "./analiza/analiza_mg_mean_assault.tex", open = "wt")
writeLines( "\\(" %+% as.character( round( dMeanAssault, 2)) %+% "\\)", conn)
close( conn)
conn <- file( "./analiza/analiza_mg_mean_murder.tex", open = "wt")
writeLines( "\\(" %+% as.character( round( dMeanMurder, 2)) %+% "\\)", conn)
close( conn)
library( dplyr)
library( stargazer)
setwd("D:/Edukacja/1.Doktorat/ROK_3/organizacja_projektow_naukowych/ramsza/ver1/proj_mg")
df = read.csv(file= "./dane/usarrest.csv")
# PLOT
png( filename = "./analiza/analiza_mg_fig_1.png")
plot( df %>% filter( Murder >= 10) %>% select(UrbanPop,Assault),
pch = 19, col = rgb( 0, 0, 1, 0.5), xlim = range( df$UrbanPop), ylim = range( df$Assault))
points( df %>% filter( Murder < 10) %>% select(UrbanPop,Assault),
pch = 19, col = rgb( 1, 0, 0, 0.5), xlim = range( df$UrbanPop), ylim = range( df$Assault))
grid()
dev.off()
# Tablica
dTable <- df %>% select(Murder,Assault,UrbanPop)
dTable
stargazer( dTable,
out = "./analiza/analiza_mg_tab_1.tex",
summary = FALSE,
rownames = TRUE,
title = "Tablica_1",
caption = "Przestępczość w USA per stan",
align = TRUE,
font.size = "small",
no.space = TRUE,
label = "tab:analiza_mg_tab_1")
# Pojedyncze liczby
dMeanAssault <- mean( df$Assault)
dMeanMurder <- mean( df$Murder)
`%+%` <- paste0
conn <- file( "./analiza/analiza_mg_mean_assault.tex", open = "wt")
writeLines( "\\(" %+% as.character( round( dMeanAssault, 2)) %+% "\\)", conn)
close( conn)
conn <- file( "./analiza/analiza_mg_mean_murder.tex", open = "wt")
writeLines( "\\(" %+% as.character( round( dMeanMurder, 2)) %+% "\\)", conn)
close( conn)
library( dplyr)
library( stargazer)
setwd("D:/Edukacja/1.Doktorat/ROK_3/organizacja_projektow_naukowych/ramsza/ver1/proj_mg")
df = read.csv(file= "./dane/usarrest.csv")
# PLOT
png( filename = "./analiza/analiza_mg_fig_1.png")
plot( df %>% filter( Murder >= 10) %>% select(UrbanPop,Assault),
pch = 19, col = rgb( 0, 0, 1, 0.5), xlim = range( df$UrbanPop), ylim = range( df$Assault))
points( df %>% filter( Murder < 10) %>% select(UrbanPop,Assault),
pch = 19, col = rgb( 1, 0, 0, 0.5), xlim = range( df$UrbanPop), ylim = range( df$Assault))
grid()
dev.off()
# Tablica
dTable <- df %>% select(Murder,Assault,UrbanPop)
dTable
stargazer( dTable,
out = "./analiza/analiza_mg_tab_1.tex",
summary = FALSE,
rownames = TRUE,
title = "Podstawowe statystyki dla wykorzystanych danych",
align = TRUE,
font.size = "small",
no.space = TRUE,
label = "tab:analiza_mg_tab_1")
# Pojedyncze liczby
dMeanAssault <- mean( df$Assault)
dMeanMurder <- mean( df$Murder)
`%+%` <- paste0
conn <- file( "./analiza/analiza_mg_mean_assault.tex", open = "wt")
writeLines( "\\(" %+% as.character( round( dMeanAssault, 2)) %+% "\\)", conn)
close( conn)
conn <- file( "./analiza/analiza_mg_mean_murder.tex", open = "wt")
writeLines( "\\(" %+% as.character( round( dMeanMurder, 2)) %+% "\\)", conn)
close( conn)
library( dplyr)
library( stargazer)
setwd("D:/Edukacja/1.Doktorat/ROK_3/organizacja_projektow_naukowych/ramsza/ver1/proj_mg")
df = read.csv(file= "./dane/usarrest.csv")
# PLOT
png( filename = "./analiza/analiza_mg_fig_1.png")
plot( df %>% filter( Murder >= 10) %>% select(UrbanPop,Assault),
pch = 19, col = rgb( 0, 0, 1, 0.5), xlim = range( df$UrbanPop), ylim = range( df$Assault))
points( df %>% filter( Murder < 10) %>% select(UrbanPop,Assault),
pch = 19, col = rgb( 1, 0, 0, 0.5), xlim = range( df$UrbanPop), ylim = range( df$Assault))
grid()
dev.off()
library( dplyr)
library( stargazer)
setwd("D:/Edukacja/1.Doktorat/ROK_3/organizacja_projektow_naukowych/ramsza/ver1/proj_mg")
df = read.csv(file= "./dane/usarrest.csv")
# Tablica
dTable <- df %>% select(Murder,Assault,UrbanPop)
dTable
stargazer( dTable,
out = "./analiza/analiza_mg_tab_1.tex",
summary = FALSE,
rownames = TRUE,
title = "Podstawowe statystyki dla wykorzystanych danych",
align = TRUE,
font.size = "small",
no.space = TRUE,
label = "tab:analiza_mg_tab_1")
# Pojedyncze liczby
dMeanAssault <- mean( df$Assault)
dMeanMurder <- mean( df$Murder)
`%+%` <- paste0
conn <- file( "./analiza/analiza_mg_mean_assault.tex", open = "wt")
writeLines( "\\(" %+% as.character( round( dMeanAssault, 2)) %+% "\\)", conn)
close( conn)
conn <- file( "./analiza/analiza_mg_mean_murder.tex", open = "wt")
writeLines( "\\(" %+% as.character( round( dMeanMurder, 2)) %+% "\\)", conn)
close( conn)
version
library( dplyr)
library( stargazer)
#setwd("D:/Edukacja/1.Doktorat/ROK_3/organizacja_projektow_naukowych/ramsza/ver1/proj_mg")
df = read.csv(file= "./dane/usarrest.csv")
# PLOT
png( filename = "./analiza/analiza_mg_fig_1.png")
plot( df %>% filter( Murder >= 10) %>% select(UrbanPop,Assault),
pch = 19, col = rgb( 0, 0, 1, 0.5), xlim = range( df$UrbanPop), ylim = range( df$Assault))
points( df %>% filter( Murder < 10) %>% select(UrbanPop,Assault),
pch = 19, col = rgb( 1, 0.2, 0, 0.5), xlim = range( df$UrbanPop), ylim = range( df$Assault))
grid()
dev.off()
plot( df %>% filter( Murder >= 10) %>% select(UrbanPop,Assault),
pch = 19, col = rgb( 0, 0, 1, 0.5), xlim = range( df$UrbanPop), ylim = range( df$Assault))
points( df %>% filter( Murder < 10) %>% select(UrbanPop,Assault),
pch = 19, col = rgb( 1, 0.2, 0, 0.5), xlim = range( df$UrbanPop), ylim = range( df$Assault))
points( df %>% filter( Murder < 10) %>% select(UrbanPop,Assault),
pch = 19, col = rgb( 1, 0.6, 0, 0.5), xlim = range( df$UrbanPop), ylim = range( df$Assault))
points( df %>% filter( Murder < 10) %>% select(UrbanPop,Assault),
pch = 19, col = rgb( 1, 0.6, 0.2, 0.5), xlim = range( df$UrbanPop), ylim = range( df$Assault))
plot( df %>% filter( Murder >= 10) %>% select(UrbanPop,Assault),
pch = 19, col = rgb( 0, 0, 1, 0.5), xlim = range( df$UrbanPop), ylim = range( df$Assault))
points( df %>% filter( Murder < 10) %>% select(UrbanPop,Assault),
pch = 19, col = rgb( 1, 0.6, 0.2, 0.5), xlim = range( df$UrbanPop), ylim = range( df$Assault))
